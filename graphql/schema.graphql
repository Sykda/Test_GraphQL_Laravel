"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    findAllUser:[User] @all

    findAllPosts: [Post] @all

    findAllComents:[Comment]@all
}

type Mutation {

  createUser(name: String!): User! @create

  updateUser(id: ID!, name: String): User @update

  "Updapte if exists and Insert if don't"
  upsertUser(id: ID!, name: String!, email: String): User @upsert

  deleteUser(id: ID!): User @delete

}


type User {
  id: ID!
  name: String!
  created_at: DateTime
  updated_at: DateTime
  posts: [Post!]! @hasMany
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User! @belongsTo
  comments: [Comment!]! @hasMany
}

type Comment {
  id: ID!
  reply: String!
  post: Post! @belongsTo
}